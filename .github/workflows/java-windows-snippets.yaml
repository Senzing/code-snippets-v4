name: java windows snippets

on:
  pull_request:
  schedule:
    - cron: "15 7 * * *"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  java-windows-snippets:
    outputs:
      status: ${{ job.status }}
    permissions:
      contents: read
      pull-requests: write
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        java-version: ["17", "21"]
        java-distribution: ["temurin"]
        senzingsdk-version: [production-v4, staging-v4]

    steps:
      - name: checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.java-distribution }}

      - name: install Senzing SDK
        uses: senzing-factory/github-action-install-senzing-sdk@v3
        with:
          senzingsdk-version: ${{ matrix.senzingsdk-version }}

      - name: build with Maven
        run: |
          $Env:SENZING_PATH = "$Env:USERPROFILE\senzing"
          cd "${Env:GITHUB_WORKSPACE}/java"
          mvn clean install "-Pcheckstyle,spotbugs" -B "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"

      - name: Add to "Path" environment variable
        run: |
          Add-Content $env:GITHUB_PATH "$Env:USERPROFILE\senzing\er\lib"

      - name: run java snippets
        run: |
          cd "${Env:GITHUB_WORKSPACE}/java"
          java -jar target/sz-sdk-snippets.jar all

  slack-notification:
    needs: [java-windows-snippets]
    if: ${{ always() && contains(fromJSON('["failure", "cancelled"]'), needs.java-windows-snippets.outputs.status ) && github.event_name == 'schedule' }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    uses: senzing-factory/build-resources/.github/workflows/build-failure-slack-notification.yaml@v2
    with:
      job-status: ${{ needs.java-windows-snippets.outputs.status }}
